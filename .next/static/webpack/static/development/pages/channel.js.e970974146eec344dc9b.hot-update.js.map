{"version":3,"file":"static/webpack/static\\development\\pages\\channel.js.e970974146eec344dc9b.hot-update.js","sources":["webpack:///./pages/channel.js"],"sourcesContent":["import Error from 'next/error'\r\n\r\nexport default class extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { openPodcast }\r\n    }\r\n\r\n    static async getInitialProps({ query, res }) {\r\n        let idChannel = query.id\r\n\r\n        try {\r\n            let [reqChannel, reqAudio, reqSeries] = await Promise.all([\r\n                fetch(`https://api.audioboom.com/channels/${idChannel}`),\r\n                fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\r\n                fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`)\r\n            ])\r\n\r\n            if( reqChannel.status >= 404 ){\r\n                res.statusCode = reqChannel.status\r\n                return { channel: null, audioClips:null, series: null, statusCode: reqChannel.status}\r\n            }\r\n    \r\n            let dataChannel = await reqChannel.json()\r\n            let channel = dataChannel.body.channel\r\n    \r\n            let dataAudios = await reqAudio.json()\r\n            let audioClips = dataAudios.body.audio_clips\r\n    \r\n            let dataSeries = await reqSeries.json()\r\n            let series = dataSeries.body.channels\r\n    \r\n            return { channel, audioClips, series, statusCode: 200 }\r\n        } catch (e) {\r\n            return { channel: null, audioClips:null, series: null, statusCode: 503}\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { channel, audioClips, series, statusCode } = this.props\r\n\r\n        if( statusCode !== 200 ){\r\n            return <Error statusCode={ statusCode } />\r\n        }\r\n\r\n        return (\r\n        <div>\r\n            <header>Podcasts</header>\r\n\r\n\r\n             <h1>{ channel.title }</h1>\r\n\r\n            <h2>Series</h2>\r\n            {\r\n                series.map((serie) => (\r\n                    <div>{ serie.title }</div>\r\n                ))\r\n            }\r\n\r\n            <h2>Ultimos Podcasts</h2>\r\n            {\r\n                audioClips.map((clip) => (\r\n                    <div>{ clip.title }</div>\r\n                ))\r\n            }\r\n\r\n\r\n\r\n            <style jsx>{`\r\n                    header {\r\n                        color: #fff;\r\n                        background: #8756ca;\r\n                        padding: 15px;\r\n                        text-align: center;\r\n                    }\r\n                    .channels{\r\n                        display: grid;\r\n                        grid-gap: 15px;\r\n                        padding: 15px;\r\n                        grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\r\n                    }\r\n                    .channel {\r\n                        display: block;\r\n                        border-radius: 3px;\r\n                        box-shadow: 0px 2px 6px rbga(0,0,0,0.15);\r\n                        margin-bottom: 0.5em;\r\n                    }\r\n                    .channel img {\r\n                        width: 100%;\r\n                    }\r\n                    h1 {\r\n                        font-weight: 600;\r\n                        padding: 15px;\r\n                    }\r\n                    h2 {\r\n                        padding: 5px;\r\n                        font-size: 0.9em;\r\n                        font-weight: 600;\r\n                        margin: 0;\r\n                        text-align: center;\r\n                    }\r\n                `}</style>\r\n\r\n                <style jsx global>{`\r\n                    body {\r\n                        margin: 0;\r\n                        font-family: system-ui;\r\n                        background: white;\r\n                    }\r\n                `}</style>\r\n        </div>\r\n    )\r\n    }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;;;AA+BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AADA;AAKA;AAAA;AAEA;AACA;AAAA;AADA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkEA;;;;;;;;;;;;;AAxGA;AACA;;;AAGA;AACA;;;;AADA;AAAA;AAAA;AACA;AAKA;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;;AADA;AACA;;AAEA;AACA;;AADA;AACA;;AAEA;AACA;;AADA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AAlCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}